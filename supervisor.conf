; run echo_supervisord_conf to generate a sample file

[unix_http_server]
file=/tmp/.twit-supervisor.sock   ; (the path to the socket file)

[supervisord]
logfile=/var/log/twit/twit-supervisord.log ; (main log file;default $CWD/supervisord.log)
logfile_maxbytes=50MB        ; (max main logfile bytes b4 rotation;default 50MB)
logfile_backups=10           ; (num of main logfile rotation backups;default 10)
loglevel=info                ; (log level;default info; others: debug,warn,trace)
pidfile=/var/www/.twit-supervisord.pid ; (supervisord pidfile;default supervisord.pid)
nodaemon=true                ; (start in foreground if true;default false)
minfds=1024                  ; (min. avail startup file descriptors;default 1024)
minprocs=200                 ; (min. avail process descriptors;default 200)

; the below section must remain in the config file for RPC
; (supervisorctl/web interface) to work, additional interfaces may be
; added by defining them in separate rpcinterface: sections
[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface

[supervisorctl]
serverurl=unix:///tmp/.twit-supervisor.sock ; use a unix:// URL  for a unix socket

[program:main]
command=python -m twit.main
autorestart=true
redirect_stderr=true
stdout_logfile=/var/log/twit/%(program_name)s-%(process_num)s.log


[program:indexer]
command=python -m twit.indexer
autorestart=true
redirect_stderr=true
stdout_logfile=/var/log/twit/%(program_name)s-%(process_num)s.log


[program:frontend]
command=python -m twit.frontend http
autorestart=true
redirect_stderr=true
stdout_logfile=/var/log/twit/%(program_name)s-%(process_num)s.log


[program:ws]
command=python -m twit.frontend ws
autorestart=true
redirect_stderr=true
stdout_logfile=/var/log/twit/%(program_name)s-%(process_num)s.log

